--- # Install mariadb via ansible on centOS
 - hosts: osddb
   become: true
   vars:
     mysql_root_password: your_secure_password #mot de passe du compte root de la bdd
     new_db_name: PEMEAD #nom de la base de donnée
     new_db_user: PEMEAD #utilisateur utilisé par l'application
     new_db_password: your_secure_password #mot de passe base de donnée utilisé  par l'application
     osd_app_host: 10.0.0.151
     import_sql_file: ./pemead.sql #chemin du fichier sql d'installation
     new_admin_user: adm_p.nom #Compte de l'administrateur technique sur la base de donnée
     new_admin_password: your_secure_password #Mot de passe de l'administrateur technique
     
   tasks:
    - name: Install MYSQL
      yum:
        name: mariadb-server
        state: present
    - name: Install the Python MySQL Support Libraries
      yum: pkg=MySQL-python state=latest
    - name: Start MariaDB service and enable it on reboot
      service:
        name: mariadb
        state: started
        enabled: true
    - name: Change root password
      mysql_user:
        login_host: 'localhost'
        login_user: root
        login_password: ""
        name: root
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL,GRANT"
        state: present

    - name: Remove anonymous users
      mysql_user:
        name: ''
        host: '{{ item }}'
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: Disallow remote root login
      mysql_user:
        name: root
        host: '{{ ansible_hostname }}'
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Remove test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"


    - name: Create new database
      mysql_db:
        name: "{{ new_db_name }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
    - name: Create new user for new database
      mysql_user:
        name: "{{ new_db_user }}"
        host: "{{ osd_app_host }}"
        password: "{{ new_db_password }}"
        priv: "{{ new_db_name }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create new admin user for new database
      mysql_user:
        name: "{{ new_admin_user }}"
        host: "{{ osd_app_host }}"
        password: "{{ new_admin_password }}"
        priv: "{{ new_db_name }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
    
    - name: Copy sql file to target
      copy:
        src: "{{ import_sql_file }}"
        dest: "{{ import_sql_file }}"
      
    - name: Import  database
      mysql_db:
        name: "{{ new_db_name }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
        target: "{{ import_sql_file }}"
        state: import

    - name: Open port 3306 on firewalld
      command: firewall-cmd --permanent --add-port=3306/tcp
      become: true
      
    - name: Reload firewall rules
      command: firewall-cmd --reload
      become: true

    - name: Reboot the machine OSDDB
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0

    - name: Wait for the machine to come back online
      wait_for_connection:
        connect_timeout: 60
        sleep: 5
        delay: 5
        timeout: 300

 # Install osd_dr application server via ansible on centOS
 - hosts: osdapp
   become: true
   vars:
    osd_db_host: 10.0.0.152  #Adresse IP du serveur de base de donnée
    db_user: pemead #utilisateur utilisé par l'application
    db_password: pemead+ #mot de passe base de donnée utilisé  par l'application 
    url: "pem-ead.gouv.fr" #URL de l'application (restriction des connexions via ce domaine)
    serverAdmin: pemead@mail.fr
    serverName: pem-ead.gouv.fr
    documentRoot: /var/www/html/pemead
    logDirectory: /var/log/httpd/
    errorLog: /var/log/httpd/pemead/Error.log
    customLog: /var/log/httpd/pemead/Custom.log
    local_ssl_certificate_file: ./pemeadapp.crt
    local_ssl_certificate_key_file: ./pemeadapp.key
    ssl_certificate_file: /etc/ssl/certs/pemeadapp.crt
    ssl_certificate_key_file: /etc/ssl/certs/pemeadapp.key

   tasks:
    - name: Open ports for HTTP
      command: firewall-cmd --permanent --add-service=http

    - name: Open ports for HTTPS
      command: firewall-cmd --permanent --add-service=https

    - name: Open ports for LDAPS
      command: firewall-cmd --permanent --add-service=ldaps

    - name: Open port 3306 on firewalld
      command: firewall-cmd --permanent --add-port=3306/tcp

    - name: Reload firewall rules
      command: firewall-cmd --reload

    - name: Install EPEL repository
      yum:
        name: epel-release
        state: present

    - name: Install Apache
      yum:
        name: httpd
        state: present
      
    - name: Start Apache service
      service:
        name: httpd
        state: started
        enabled: true


    - name: Copie du dossier sources PEM_EAD vers le serveur web
      copy:
        src: ./PEM_EAD
        dest: /var/www/html
        owner: apache
        group: apache
        mode: "777"

    - name: Rename PEM_EAD as pemead
      command: mv /var/www/html/PEM_EAD /var/www/html/pemead
        
    - name: Install semanage
      yum:
        name: policycoreutils-python
        state: present

    - name: Allow httpd to access web root directory
      command: semanage fcontext -a -t httpd_sys_content_t '/var/www/html(/.*)?'
    - name: Allow httpd to Write in web root directory
      command: semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html(/.*)?'
    - name: Apply changes
      command: restorecon -R -v /var/www/html/
    - name: Enable httpd_can_network_connect boolean
      command: setsebool -P httpd_can_network_connect 1
    - name: Enable httpd_can_network_relay boolean
      command: setsebool -P httpd_can_network_relay 1
    - name: Restart httpd
      service:
        name: httpd
        state: restarted

    - name: Create a folder for osddr log
      file:
        path: "{{ logDirectory }}"
        state: directory
        owner: apache
        group: apache
        mode: "775"

    - name: Copy virtualhost configuration file
      template:
        src: virtualhost.j2
        dest: /etc/httpd/conf.d/pemeadapp.conf

    - name: Copy cert files to target
      copy:
        src: "{{ local_ssl_certificate_file }}"
        dest: "{{ ssl_certificate_file }}"

    - name: Copy key files to target
      copy:
        src: "{{ local_ssl_certificate_key_file }}"
        dest: "{{ ssl_certificate_key_file }}"

    - name: Install modsecurity
      yum:
        name: mod_security
        state: present

    - name: Install modssl
      yum:
        name: mod_ssl
        state: present

    - name: Install phpMyAdmin
      yum:
        name: phpMyAdmin
        state: present
        skip_broken: yes

    - name: Install php
      yum:
        name: php
        state: present

    - name: Install php-ldap
      yum:
        name: php-ldap
        state: present

    - name: add remi-php81
      command: yum install -y https://rpms.remirepo.net/enterprise/remi-release-7.9.rpm

    - name: Enable remi-php81
      command: yum-config-manager --enable remi-php81

    - name: Update all installed packages
      yum:
        name: '*'
        state: latest

    - name: Copy phpmyadmin configuration file (cofig.inc.php)
      template:
        src: phpMyAdmin.j2
        dest: /etc/phpMyAdmin/config.inc.php

    - name: Copy php.ini file to target
      copy:
        src: php.ini
        dest: /etc/php.ini

    - name: Copy phpmyadmin configuration file (phpMyAdmin.conf)
      template:
        src: phpMyAdmin.conf
        dest: /etc/httpd/conf.d/phpMyAdmin.conf

    - name: Creates directory for log
      file:
        path: /var/log/httpd/pemead
        state: directory

    - name: Change /var/log/httpd file permission to log
      become: true
      file:
        path: /var/log/httpd
        owner: "apache"
        group: "root"
        recurse: yes

    - name: Restart Apache
      service:
        name: httpd
        state: restarted

    - name: Reboot the machine OSDAPP
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0

    - name: Wait for the machine to come back online
      wait_for_connection:
        connect_timeout: 60
        sleep: 5
        delay: 5
        timeout: 300